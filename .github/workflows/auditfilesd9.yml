name: auditfilesd9

# Run this workflow every time a new commit is pushed to the repo
on:
  push:
# The following will run on a schedule at 6am on Sundays
  schedule:
    - cron: '0 6 * * 0'

jobs:
  run-unit-tests:
    name: Run PHPUnit Tests
    runs-on:  ubuntu-latest
    env:
      MODULE: auditfiles
      COMPOSER_MEMORY_LIMIT: -1
      # Note, the username, password, port and db match mysql service setup.
      SIMPLETEST_DB: mysql://root:root@127.0.0.1:3306/auditfiles
      SIMPLETEST_BASE_URL: http://localhost:8888
      PROJECT_ROOT: .
      DRUPAL_ROOT: ./docroot
    steps:
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@master
      - name: Launch Chrome Driver
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
      - name: Shut down Ubuntu MySQL
        run: sudo service mysql stop #shutdown default mysql, sudo is necessary
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: ${{ env.MODULE }}
          mysql root password: root
      - name: Set up php version (7.4)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: date, dom, filter, gd, hash, json, mbstring, pcre, pdo, session, tokenizer, xml
          # Includes code coveage for phpunit, but disables xDebug
          coverage: pcov
      - name: Get Composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      # Create new drupal project with Composer install
      - name: Install Drupal with Composer
        run: composer update
      # Check for Drupal coding standards
      - name: Check for Drupal coding standards
        uses: guix77/phpcs-drupal-action@v1.0.0
      # Install Drupal for phpunit tests
      - name: Install Drupal site for phpunit testing
        run: |
          echo ${{ env.SIMPLETEST_DB }}
          $(pwd)/vendor/bin/drush site-install standard --yes --account-pass=admin --db-url=$SIMPLETEST_DB
          $(pwd)/vendor/bin/drush config-set system.performance css.preprocess 0 --yes
          $(pwd)/vendor/bin/drush config-set system.performance js.preprocess 0 --yes
          $(pwd)/vendor/bin/drush config-set system.logging error_level all --yes
      - name: Start HTTP server for testing
        run:  $(pwd)/vendor/bin/drush runserver --default-server=builtin 8888 > /dev/null &       
      - name: Run PHPUnit Tests
        run: |
          $(pwd)/vendor/bin/drush en simpletest
          $(pwd)/vendor/bin/phpunit -c $(pwd)/docroot/core/phpunit.xml.dist --verbose --group=${{env.MODULE}} $(pwd)/docroot/modules/contrib/${{env.MODULE}}
          $(pwd)/vendor/bin/drush pm:uninstall simpletest -y
